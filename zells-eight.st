Morph subclass: #Scope	instanceVariableNames: 'collapsed expandedSize body toggler target connector icon link'	classVariableNames: ''	poolDictionaries: ''	category: 'zells-eight'!!Scope methodsFor: 'as yet unclassified' stamp: 'NM 7/4/2018 10:52'!canBePointedAt: aZellMorph	^ false.! !!Scope methodsFor: 'as yet unclassified' stamp: 'NM 6/22/2018 14:54'!collapse	body delete.	expandedSize := self extent.	self extent: (self width)@20.	collapsed := true.! !!Scope methodsFor: 'as yet unclassified' stamp: 'NM 7/4/2018 11:17'!createBody	^ Morph new color: Color black! !!Scope methodsFor: 'as yet unclassified' stamp: 'NM 7/4/2018 06:48'!createIcon	 ^ ScopeIcon new color: Color red.! !!Scope methodsFor: 'as yet unclassified' stamp: 'NM 7/5/2018 07:58'!delete	self pointAway.	super delete.! !!Scope methodsFor: 'as yet unclassified' stamp: 'NM 7/4/2018 07:18'!dragLink	ScopeLink new		between: icon and: ActiveHand;		openInWorld.! !!Scope methodsFor: 'as yet unclassified' stamp: 'NM 6/22/2018 14:57'!expand			self extent: expandedSize.	collapsed := false.		self addMorph: (body		position: self position + (5@20);		extent: expandedSize - (10@25);		yourself).! !!Scope methodsFor: 'as yet unclassified' stamp: 'NM 7/4/2018 06:15'!extent: aPoint	super extent: aPoint. 	toggler position: self position + ((aPoint x-15)@5).	body extent: aPoint - (10@25).! !!Scope methodsFor: 'as yet unclassified' stamp: 'NM 7/4/2018 09:47'!icon	^ icon.! !!Scope methodsFor: 'as yet unclassified' stamp: 'NM 7/5/2018 07:57'!initialize	super initialize.	self color: Color white.		icon := self createIcon.	self addMorph: (icon		color: Color black;		position: self position + (5@5);		extent: 10@10;		yourself).			connector := (ScopeConnector new		color: Color transparent;		scope: self;		position: self position;		extent: 15@15;		yourself).	self addMorph: connector.		body := Morph new color: Color black.		toggler := Morph new.	self addMorph: (toggler		color: Color black;		position: 185@5;		extent: 10@10;		on: #mouseUp send: #toggleCollapse to: self;		yourself).		collapsed := false.	expandedSize := 200@100.	self expand.! !!Scope methodsFor: 'as yet unclassified' stamp: 'NM 7/7/2018 12:06'!pointAt: aZellMorph	self color: aZellMorph color.	self collapse.	target := aZellMorph.	body := self createBody.	self expand.		link ifNotNil: [link delete].	link := ScopeLink new		color: self color;		between: icon and: aZellMorph.	World addMorph: link behind: self.! !!Scope methodsFor: 'as yet unclassified' stamp: 'NM 7/5/2018 07:54'!pointAway	link ifNotNil: [link delete].	self color: Color white.	self collapse.	target := nil.	body := Morph new color: Color black.	self expand.! !!Scope methodsFor: 'as yet unclassified' stamp: 'NM 6/22/2018 14:34'!toggleCollapse	collapsed 		ifTrue: [self expand]		ifFalse: [self collapse].! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Scope class	instanceVariableNames: ''!!Scope class methodsFor: 'as yet unclassified' stamp: 'NM 6/22/2018 15:35'!pointingAt: aZell	^ self new		pointAt: aZell;		yourself.! !Scope subclass: #ReceiverScope	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'zells-eight'!!ReceiverScope methodsFor: 'as yet unclassified' stamp: 'NM 7/4/2018 11:01'!canBePointedAt: aZellMorph	^ true.! !!ReceiverScope methodsFor: 'as yet unclassified' stamp: 'NM 7/4/2018 11:18'!createBody	^ Morph new		color: Color black;		layoutPolicy: TableLayout new;		listDirection: #topToBottom;		"hResizing: #shrinkWrap; vResizing: #shrinkWrap;"		layoutInset: 5; cellInset: 10;		clipSubmorphs: true;		yourself.! !!ReceiverScope methodsFor: 'as yet unclassified' stamp: 'NM 7/4/2018 15:00'!createIcon	 ^ ReceiverScopeIcon new.! !!ReceiverScope methodsFor: 'as yet unclassified' stamp: 'NM 7/4/2018 11:31'!makeZellFor: aSignal	(aSignal isKindOf: String) ifTrue: [^ TextZell new value: aSignal].	^ Zell new! !!ReceiverScope methodsFor: 'as yet unclassified' stamp: 'NM 7/4/2018 11:10'!pointAt: aZellMorph	super pointAt: aZellMorph.	target zell events on: #signalReceived send: #signalReceived: to: self.! !!ReceiverScope methodsFor: 'as yet unclassified' stamp: 'NM 7/4/2018 11:07'!pointAway	target ifNotNil: [target zell events for: #signalReceived remove: self].	super pointAway.! !!ReceiverScope methodsFor: 'as yet unclassified' stamp: 'NM 7/4/2018 11:30'!signalReceived: aSignal	body addMorph: ((ZellMorph for: (self makeZellFor: aSignal))		position: body position;		yourself).	body addMorph: (TextMorph new 		color: Color white;		contents: Time current asString)! !Morph subclass: #ScopeConnector	instanceVariableNames: 'scope link'	classVariableNames: ''	poolDictionaries: ''	category: 'zells-eight'!!ScopeConnector methodsFor: 'as yet unclassified' stamp: 'NM 7/4/2018 09:51'!handlesMouseDown: evt	^ true.! !!ScopeConnector methodsFor: 'as yet unclassified' stamp: 'NM 7/4/2018 09:29'!handlesMouseOverDragging: evt	^ true.! !!ScopeConnector methodsFor: 'as yet unclassified' stamp: 'NM 7/5/2018 07:51'!justDroppedInto: aMorph event: anEvent	scope pointAt: aMorph.	self returnToScope.! !!ScopeConnector methodsFor: 'as yet unclassified' stamp: 'NM 7/5/2018 07:52'!mouseLeaveDragging: evt	self color: Color white.	link ifNil: [link := ScopeLink new		between: scope icon and: self;		openInWorld].		scope pointAway.	ActiveHand grabMorph: self! !!ScopeConnector methodsFor: 'as yet unclassified' stamp: 'NM 7/5/2018 07:51'!rejectDropMorphEvent: evt	scope pointAway.	self returnToScope.! !!ScopeConnector methodsFor: 'as yet unclassified' stamp: 'NM 7/5/2018 07:51'!returnToScope	self color: Color transparent.	scope addMorph: self.	self position: scope position + (5@5).	link delete.	link := nil.! !!ScopeConnector methodsFor: 'as yet unclassified' stamp: 'NM 7/4/2018 09:42'!scope: aScope	scope := aScope.! !!ScopeConnector methodsFor: 'as yet unclassified' stamp: 'NM 7/4/2018 10:18'!wantsToBeDroppedInto: aMorph.	^ (aMorph isKindOf: ZellMorph) and: [scope canBePointedAt: aMorph]! !Morph subclass: #ScopeIcon	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'zells-eight'!ScopeIcon subclass: #ReceiverScopeIcon	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'zells-eight'!!ReceiverScopeIcon methodsFor: 'as yet unclassified' stamp: 'NM 7/4/2018 15:02'!drawOn: aCanvas	aCanvas line: self topLeft to: self center width: 2 color: self color.	aCanvas line: self center to: self bottomLeft width: 2 color: self color.	aCanvas fillOval: (Rectangle center: self rightCenter - (2@0) extent: 4) color: self color.! !Morph subclass: #ScopeLink	instanceVariableNames: 'fromMorph toMorph'	classVariableNames: ''	poolDictionaries: ''	category: 'zells-eight'!!ScopeLink methodsFor: 'as yet unclassified' stamp: 'NM 7/4/2018 06:55'!between: a and: b	fromMorph := a.	toMorph := b.! !!ScopeLink methodsFor: 'as yet unclassified' stamp: 'NM 7/4/2018 10:28'!drawOn: aCanvas	aCanvas line: fromMorph center to: toMorph center color: self color.! !!ScopeLink methodsFor: 'as yet unclassified' stamp: 'NM 7/7/2018 12:06'!handlesMouseDown: evt	^ true! !!ScopeLink methodsFor: 'as yet unclassified' stamp: 'NM 7/4/2018 15:03'!initialize	super initialize.	self color: Color white.! !!ScopeLink methodsFor: 'as yet unclassified' stamp: 'NM 7/4/2018 09:10'!releaseGrip	self delete.! !!ScopeLink methodsFor: 'as yet unclassified' stamp: 'NM 7/4/2018 09:49'!step	self bounds: (Rectangle center: (fromMorph center + toMorph center) / 2 extent: (fromMorph center - toMorph center) abs + (2@2)).! !!ScopeLink methodsFor: 'as yet unclassified' stamp: 'NM 7/4/2018 07:18'!stepTime	^ 100! !!ScopeLink methodsFor: 'as yet unclassified' stamp: 'NM 7/4/2018 15:11'!wantsToBeDroppedInto: aMorph.	^ false! !Scope subclass: #TextScope	instanceVariableNames: 'text'	classVariableNames: ''	poolDictionaries: ''	category: 'zells-eight'!!TextScope methodsFor: 'as yet unclassified' stamp: 'NM 7/4/2018 10:53'!canBePointedAt: aZellMorph	^ aZellMorph zell isKindOf: TextZell.! !!TextScope methodsFor: 'as yet unclassified' stamp: 'NM 7/7/2018 11:45'!createBody	| myBody |	myBody := Morph new 		color: Color black; 		yourself.		text := TextMorph new		contents: (target zell value ifEmpty: ['T']);		color: Color white;		height: 100;		on: #keyUp send: #textChanged to: self;		yourself.			myBody addMorph: text.		^ myBody.! !!TextScope methodsFor: 'as yet unclassified' stamp: 'NM 7/4/2018 14:57'!createIcon	 ^ TextScopeIcon new.! !!TextScope methodsFor: 'as yet unclassified' stamp: 'NM 7/4/2018 06:31'!extent: aPoint	super extent: aPoint.	self positionText! !!TextScope methodsFor: 'as yet unclassified' stamp: 'NM 7/4/2018 10:39'!pointAt: aZellMorph	super pointAt: aZellMorph.	target zell events on: #valueChanged send: #valueChanged to: self.! !!TextScope methodsFor: 'as yet unclassified' stamp: 'NM 7/4/2018 11:21'!pointAway	target ifNotNil: [target zell events for: #valueChanged remove: self].	super pointAway.! !!TextScope methodsFor: 'as yet unclassified' stamp: 'NM 7/4/2018 06:31'!positionText	text ifNotNil: [text position: body position + (body extent / 2) - (text extent / 2)].! !!TextScope methodsFor: 'as yet unclassified' stamp: 'NM 7/4/2018 06:31'!textChanged	target zell value: text contents asString.	self positionText.! !!TextScope methodsFor: 'as yet unclassified' stamp: 'NM 7/4/2018 10:40'!valueChanged	text contents: target zell value.! !ScopeIcon subclass: #TextScopeIcon	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'zells-eight'!!TextScopeIcon methodsFor: 'as yet unclassified' stamp: 'NM 7/4/2018 14:59'!drawOn: aCanvas	aCanvas line: self topLeft to: self topRight width: 2 color: self color.	aCanvas line: self bottomCenter to: self topCenter width: 2 color: self color.! !Object subclass: #ZDish	instanceVariableNames: 'culture positions events'	classVariableNames: ''	poolDictionaries: ''	category: 'zells-eight'!!ZDish methodsFor: 'as yet unclassified' stamp: 'NM 6/27/2018 13:42'!events	^ events! !!ZDish methodsFor: 'as yet unclassified' stamp: 'NM 6/27/2018 13:42'!initialize	super initialize.	culture := Set new.	positions := Dictionary new.	events := ZEventEmitter new.! !!ZDish methodsFor: 'as yet unclassified' stamp: 'NM 6/27/2018 15:42'!move: aZell to: aPoint	positions at: aZell put: aPoint.! !!ZDish methodsFor: 'as yet unclassified' stamp: 'NM 6/27/2018 11:35'!positionOf: aZell	^ positions at: aZell ifAbsent: [^ 0@0]! !!ZDish methodsFor: 'as yet unclassified' stamp: 'NM 6/27/2018 11:40'!put: aZell	culture add: aZell.	^ aZell.! !!ZDish methodsFor: 'as yet unclassified' stamp: 'NM 6/27/2018 11:41'!put: aZell at: aPoint	self move: aZell to: aPoint.	^ self put: aZell.! !!ZDish methodsFor: 'as yet unclassified' stamp: 'NM 6/27/2018 15:08'!remove: aZell 	culture remove: aZell ifAbsent: [].! !!ZDish methodsFor: 'as yet unclassified' stamp: 'NM 6/27/2018 16:04'!secondsFrom: aSenderZell to: aReceiverZell	^ ((self positionOf: aSenderZell) dist: (self positionOf: aReceiverZell)) / self signalSpeed! !!ZDish methodsFor: 'as yet unclassified' stamp: 'NM 6/27/2018 16:04'!signalSpeed	^ 500! !!ZDish methodsFor: 'as yet unclassified' stamp: 'NM 7/4/2018 11:38'!transmit: aSignal	culture do: [:receiver | receiver receive: aSignal]! !!ZDish methodsFor: 'as yet unclassified' stamp: 'NM 6/27/2018 15:41'!transmit: aSignal from: aZell	events fire: #transmittingSignal with: aSignal with: aZell.	culture do: [:receiver | [			(Delay forSeconds: (self secondsFrom: aZell to: receiver)) wait.			receiver receive: aSignal.			] fork]! !Morph subclass: #ZDishMorph	instanceVariableNames: 'dish morphs'	classVariableNames: ''	poolDictionaries: ''	category: 'zells-eight'!!ZDishMorph methodsFor: 'as yet unclassified' stamp: 'NM 6/27/2018 15:57'!acceptDroppingMorph: aMorph event: evt	super acceptDroppingMorph: aMorph event: evt.	morphs at: aMorph zell put: aMorph.	dish put: aMorph zell at: aMorph center.	dish transmit: aMorph zell asSignal from: aMorph zell.! !!ZDishMorph methodsFor: 'as yet unclassified' stamp: 'NM 6/27/2018 11:48'!dish	^ dish! !!ZDishMorph methodsFor: 'as yet unclassified' stamp: 'NM 7/6/2018 22:26'!handlesMouseDown: evt	 ^ true! !!ZDishMorph methodsFor: 'as yet unclassified' stamp: 'NM 7/7/2018 13:00'!initialize	super initialize.	self extent: 400@200.	self color: (Color h:0 s:0 v:0.12).	self clipSubmorphs: true.	morphs := Dictionary new.	dish := ZDish new.	dish events on: #transmittingSignal send: #transmittingSignal:From: to: self.! !!ZDishMorph methodsFor: 'as yet unclassified' stamp: 'NM 7/7/2018 11:57'!mouseDown: evt	self submorphs detect: [:m|m bounds containsPoint: evt position] 		ifFound: [:z|z mouseDown: evt] 		ifNone: []! !!ZDishMorph methodsFor: 'as yet unclassified' stamp: 'NM 7/4/2018 11:27'!mustBeBackmost	^ true! !!ZDishMorph methodsFor: 'as yet unclassified' stamp: 'NM 6/27/2018 18:46'!removedMorph: aMorph	(aMorph isKindOf: ZellMorph) ifTrue: [		morphs removeKey: aMorph zell.		dish remove: aMorph zell].! !!ZDishMorph methodsFor: 'as yet unclassified' stamp: 'NM 7/7/2018 12:01'!transmittingSignal: aSignal From: aZell	self addMorphBack: (ZSignalMorph new		zell: (morphs at: aZell);		speed: dish signalSpeed;		maxDiameter: self width * 2;		yourself)! !!ZDishMorph methodsFor: 'as yet unclassified' stamp: 'NM 6/27/2018 11:44'!wantsDroppedMorph: aMorph event: evt	^ aMorph isKindOf: ZellMorph! !Object subclass: #ZEventEmitter	instanceVariableNames: 'listeners'	classVariableNames: ''	poolDictionaries: ''	category: 'zells-eight'!!ZEventEmitter methodsFor: 'as yet unclassified' stamp: 'NM 6/27/2018 13:44'!fire: anEvent	self fire: anEvent for: [:receiver :message | receiver perform: message].! !!ZEventEmitter methodsFor: 'as yet unclassified' stamp: 'NM 6/27/2018 13:45'!fire: anEvent for: aBlock	listeners at: anEvent ifPresent: [:listeners | 		listeners keysAndValuesDo: [:receiver :messages | 			messages do: [:message | aBlock value: receiver value: message]]]! !!ZEventEmitter methodsFor: 'as yet unclassified' stamp: 'NM 6/27/2018 13:45'!fire: anEvent with: anArgument	self fire: anEvent for: [:receiver :message | receiver perform: message with: anArgument].! !!ZEventEmitter methodsFor: 'as yet unclassified' stamp: 'NM 6/27/2018 14:43'!fire: anEvent with: anArgument with: anotherArgument	self fire: anEvent for: [:receiver :message | receiver perform: message with: anArgument with: anotherArgument].! !!ZEventEmitter methodsFor: 'as yet unclassified' stamp: 'NM 6/27/2018 11:00'!for: anEvent remove: aReceiver	listeners at: anEvent ifPresent: [:ls | ls removeKey: aReceiver]! !!ZEventEmitter methodsFor: 'as yet unclassified' stamp: 'NM 6/22/2018 15:18'!initialize	super initialize.	listeners := Dictionary new.! !!ZEventEmitter methodsFor: 'as yet unclassified' stamp: 'NM 6/27/2018 10:58'!on: anEvent send: aMessage to: aReceiver	((listeners at: anEvent ifAbsentPut: Dictionary new)		at: aReceiver ifAbsentPut: Set new) add: aMessage! !Morph subclass: #ZSignalMorph	instanceVariableNames: 'maxDiameter speed started origin'	classVariableNames: ''	poolDictionaries: ''	category: 'zells-eight'!!ZSignalMorph methodsFor: 'as yet unclassified' stamp: 'NM 6/27/2018 14:56'!drawOn: aCanvas	aCanvas frameOval: self bounds width: 1 color: (self color mixed: 0.8 with: Color black).! !!ZSignalMorph methodsFor: 'as yet unclassified' stamp: 'NM 7/3/2018 21:59'!initialize	super initialize.	maxDiameter := 1000.	speed := 100.	started := Time current.! !!ZSignalMorph methodsFor: 'as yet unclassified' stamp: 'NM 6/27/2018 14:56'!maxDiameter: aNumber	maxDiameter := aNumber.! !!ZSignalMorph methodsFor: 'as yet unclassified' stamp: 'NM 6/27/2018 15:04'!speed: aNumber	speed := aNumber.! !!ZSignalMorph methodsFor: 'as yet unclassified' stamp: 'NM 7/7/2018 12:02'!step	| size |	size := speed * ((Time current asNanoSeconds - started asNanoSeconds) / 1000000000).	self bounds: (origin outsetBy: (size)@(size)).	(self width > maxDiameter) ifTrue: [self delete].! !!ZSignalMorph methodsFor: 'as yet unclassified' stamp: 'NM 6/27/2018 16:03'!stepTime	^ 20! !!ZSignalMorph methodsFor: 'as yet unclassified' stamp: 'NM 7/7/2018 12:02'!zell: aZellMorph	self color: aZellMorph color.	origin := aZellMorph bounds.! !Object subclass: #Zell	instanceVariableNames: 'events'	classVariableNames: ''	poolDictionaries: ''	category: 'zells-eight'!!Zell methodsFor: 'as yet unclassified' stamp: 'NM 6/27/2018 13:39'!asSignal	^ nil! !!Zell methodsFor: 'as yet unclassified' stamp: 'NM 6/27/2018 11:01'!drawIconOn: aCanvas in: aRectangle! !!Zell methodsFor: 'as yet unclassified' stamp: 'NM 6/27/2018 11:02'!events	^ events! !!Zell methodsFor: 'as yet unclassified' stamp: 'NM 6/27/2018 10:54'!initialize	super initialize.	events := ZEventEmitter new.! !!Zell methodsFor: 'as yet unclassified' stamp: 'NM 6/27/2018 18:45'!receive: aSignal	events fire: #signalReceived with: aSignal.! !Zell subclass: #LoggingZell	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'zells-eight'!!LoggingZell methodsFor: 'as yet unclassified' stamp: 'NM 6/27/2018 18:45'!receive: aSignal	super receive: aSignal.	Transcript show: '### received: '; show: aSignal; cr.! !Zell subclass: #TextZell	instanceVariableNames: 'textValue'	classVariableNames: ''	poolDictionaries: ''	category: 'zells-eight'!!TextZell methodsFor: 'as yet unclassified' stamp: 'NM 6/27/2018 13:40'!asSignal	^ self value! !!TextZell methodsFor: 'as yet unclassified' stamp: 'NM 6/27/2018 11:01'!drawIconOn: aCanvas in: aRectangle	aCanvas drawString: self iconString at: aRectangle leftCenter + (10@(-5)) font: nil color: Color white.! !!TextZell methodsFor: 'as yet unclassified' stamp: 'NM 6/27/2018 10:50'!iconString	^ self value isEmpty		ifTrue: [^ #T]		ifFalse: [^ self value]! !!TextZell methodsFor: 'as yet unclassified' stamp: 'NM 7/4/2018 10:33'!initialize	super initialize.	self value: ''.! !!TextZell methodsFor: 'as yet unclassified' stamp: 'NM 6/22/2018 15:14'!value	^ textValue.! !!TextZell methodsFor: 'as yet unclassified' stamp: 'NM 6/27/2018 11:14'!value: aString	textValue := aString.	events fire: #valueChanged.	events fire: #iconChanged.! !Morph subclass: #ZellMorph	instanceVariableNames: 'zell flash'	classVariableNames: ''	poolDictionaries: ''	category: 'zells-eight'!!ZellMorph methodsFor: 'as yet unclassified' stamp: 'NM 6/27/2018 18:51'!drawOn: aCanvas	flash ifTrue: [aCanvas fillOval: self bounds color: (self color mixed: 0.3 with: Color black)].	aCanvas frameOval: self bounds width: 2 color: self color.	zell drawIconOn: aCanvas in: self bounds.! !!ZellMorph methodsFor: 'as yet unclassified' stamp: 'NM 6/27/2018 18:49'!initialize	super initialize.	self extent: 50@50.	self color: (((Color wheel: 12) atRandom) mixed: 0.7 with: Color white).		flash := false.	zell := Zell new.! !!ZellMorph methodsFor: 'as yet unclassified' stamp: 'NM 7/7/2018 11:58'!mouseDown: evt	ActiveHand grabMorph: self! !!ZellMorph methodsFor: 'as yet unclassified' stamp: 'NM 6/27/2018 18:50'!onReceived: aSignal	flash := true.	self redrawIcon.	[(Delay forSeconds: 0.1) wait.	flash := false.	self redrawIcon.] fork! !!ZellMorph methodsFor: 'as yet unclassified' stamp: 'NM 6/27/2018 15:11'!position: aPoint	(self owner isKindOf: ZDishMorph) ifTrue: [self owner dish move: self zell to: aPoint].	^ super position: aPoint.! !!ZellMorph methodsFor: 'as yet unclassified' stamp: 'NM 6/27/2018 11:07'!redrawIcon	self invalidRect: self bounds! !!ZellMorph methodsFor: 'as yet unclassified' stamp: 'NM 7/4/2018 10:16'!wantsDroppedMorph: aMorph event: evt	^ aMorph isKindOf: ScopeConnector.! !!ZellMorph methodsFor: 'as yet unclassified' stamp: 'NM 6/27/2018 11:45'!zell	^ zell! !!ZellMorph methodsFor: 'as yet unclassified' stamp: 'NM 6/27/2018 18:47'!zell: aZell	zell events for: #iconChanged remove: self.	zell := aZell.	zell events on: #iconChanged send: #redrawIcon to: self.	zell events on: #signalReceived send: #onReceived: to: self.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ZellMorph class	instanceVariableNames: ''!!ZellMorph class methodsFor: 'as yet unclassified' stamp: 'NM 6/27/2018 10:35'!for: aZell	^ self new		zell: aZell;		yourself.! !