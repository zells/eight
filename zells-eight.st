Morph subclass: #Scope	instanceVariableNames: 'collapsed expandedSize body toggler target connector icon link'	classVariableNames: ''	poolDictionaries: ''	category: 'zells-eight'!!Scope methodsFor: 'as yet unclassified' stamp: 'NM 7/4/2018 10:52'!canBePointedAt: aZellMorph	^ false.! !!Scope methodsFor: 'as yet unclassified' stamp: 'NM 6/22/2018 14:54'!collapse	body delete.	expandedSize := self extent.	self extent: (self width)@20.	collapsed := true.! !!Scope methodsFor: 'as yet unclassified' stamp: 'NM 7/4/2018 11:17'!createBody	^ Morph new color: Color black! !!Scope methodsFor: 'as yet unclassified' stamp: 'NM 7/4/2018 06:48'!createIcon	 ^ ScopeIcon new color: Color red.! !!Scope methodsFor: 'as yet unclassified' stamp: 'NM 7/5/2018 07:58'!delete	self pointAway.	super delete.! !!Scope methodsFor: 'as yet unclassified' stamp: 'NM 7/4/2018 07:18'!dragLink	ScopeLink new		between: icon and: ActiveHand;		openInWorld.! !!Scope methodsFor: 'as yet unclassified' stamp: 'NM 6/22/2018 14:57'!expand			self extent: expandedSize.	collapsed := false.		self addMorph: (body		position: self position + (5@20);		extent: expandedSize - (10@25);		yourself).! !!Scope methodsFor: 'as yet unclassified' stamp: 'NM 7/4/2018 06:15'!extent: aPoint	super extent: aPoint. 	toggler position: self position + ((aPoint x-15)@5).	body extent: aPoint - (10@25).! !!Scope methodsFor: 'as yet unclassified' stamp: 'NM 7/4/2018 09:47'!icon	^ icon.! !!Scope methodsFor: 'as yet unclassified' stamp: 'NM 7/5/2018 07:57'!initialize	super initialize.	self color: Color white.		icon := self createIcon.	self addMorph: (icon		color: Color black;		position: self position + (5@5);		extent: 10@10;		yourself).			connector := (ScopeConnector new		color: Color transparent;		scope: self;		position: self position;		extent: 15@15;		yourself).	self addMorph: connector.		body := Morph new color: Color black.		toggler := Morph new.	self addMorph: (toggler		color: Color black;		position: 185@5;		extent: 10@10;		on: #mouseUp send: #toggleCollapse to: self;		yourself).		collapsed := false.	expandedSize := 200@100.	self expand.! !!Scope methodsFor: 'as yet unclassified' stamp: 'NM 8/24/2018 12:25'!pointAt: aZellMorph	self color: aZellMorph color.	self collapse.	target := aZellMorph.	body := self createBody.	self expand.		link ifNotNil: [link delete].	link := ScopeLink new		color: self color;		between: icon and: aZellMorph.	World addMorph: link behind: self.! !!Scope methodsFor: 'as yet unclassified' stamp: 'NM 7/5/2018 07:54'!pointAway	link ifNotNil: [link delete].	self color: Color white.	self collapse.	target := nil.	body := Morph new color: Color black.	self expand.! !!Scope methodsFor: 'as yet unclassified' stamp: 'NM 6/22/2018 14:34'!toggleCollapse	collapsed 		ifTrue: [self expand]		ifFalse: [self collapse].! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Scope class	instanceVariableNames: ''!!Scope class methodsFor: 'as yet unclassified' stamp: 'NM 8/24/2018 12:26'!pointingAt: aZell	^ self new		pointAt: ((aZell isKindOf: ZellMorph) 			ifTrue: [aZell]			ifFalse: [ZellMorph for: aZell]);		yourself.! !Scope subclass: #InboxScope	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'zells-eight'!!InboxScope methodsFor: 'as yet unclassified' stamp: 'NM 8/23/2018 14:37'!canBePointedAt: aZellMorph	^ true.! !!InboxScope methodsFor: 'as yet unclassified' stamp: 'NM 8/23/2018 14:52'!createBody	^ InboxScopeBody new		target: target;		yourself.! !!InboxScope methodsFor: 'as yet unclassified' stamp: 'NM 8/23/2018 14:37'!createIcon	 ^ InboxScopeIcon new.! !Scope subclass: #ListenerScope	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'zells-eight'!!ListenerScope methodsFor: 'as yet unclassified' stamp: 'NM 7/4/2018 11:01'!canBePointedAt: aZellMorph	^ true.! !!ListenerScope methodsFor: 'as yet unclassified' stamp: 'NM 8/23/2018 16:34'!createBody	^ Morph new		color: Color black;		layoutPolicy: TableLayout new;		listDirection: #topToBottom;		cellPositioning: #topLeft;		"hResizing: #shrinkWrap; vResizing: #shrinkWrap;"		layoutInset: 5; cellInset: 10;		clipSubmorphs: true;		yourself.! !!ListenerScope methodsFor: 'as yet unclassified' stamp: 'NM 8/23/2018 14:38'!createIcon	 ^ ListenerScopeIcon new.! !!ListenerScope methodsFor: 'as yet unclassified' stamp: 'NM 8/27/2018 15:21'!makeZellFor: aSignal	(aSignal isKindOf: Association) ifTrue: [		^ (self makeZellFor: aSignal value)			name: aSignal key;			yourself].	(aSignal isKindOf: String) ifTrue: [		^ TextZell new value: aSignal].		(aSignal isKindOf: Set) ifTrue: [		^ SpaceZell new 			addAll: (aSignal collect: [:s | self makeZellFor: s]);			yourself].		^ Zell new! !!ListenerScope methodsFor: 'as yet unclassified' stamp: 'NM 7/4/2018 11:10'!pointAt: aZellMorph	super pointAt: aZellMorph.	target zell events on: #signalReceived send: #signalReceived: to: self.! !!ListenerScope methodsFor: 'as yet unclassified' stamp: 'NM 7/4/2018 11:07'!pointAway	target ifNotNil: [target zell events for: #signalReceived remove: self].	super pointAway.! !!ListenerScope methodsFor: 'as yet unclassified' stamp: 'NM 7/4/2018 11:30'!signalReceived: aSignal	body addMorph: ((ZellMorph for: (self makeZellFor: aSignal))		position: body position;		yourself).	body addMorph: (TextMorph new 		color: Color white;		contents: Time current asString)! !Scope subclass: #NameScope	instanceVariableNames: 'text'	classVariableNames: ''	poolDictionaries: ''	category: 'zells-eight'!!NameScope methodsFor: 'as yet unclassified' stamp: 'NM 8/27/2018 13:58'!canBePointedAt: aZellMorph	^ aZellMorph zell isKindOf: Zell.! !!NameScope methodsFor: 'as yet unclassified' stamp: 'NM 8/27/2018 14:31'!createBody	| myBody |	myBody := Morph new 		color: Color black; 		yourself.		text := TextMorph new		contents: (target zell name ifEmpty: ['(unnamed)']);		color: Color white;		height: 100;		on: #keyUp send: #textChanged to: self;		yourself.			myBody addMorph: text.		^ myBody.! !!NameScope methodsFor: 'as yet unclassified' stamp: 'NM 8/27/2018 14:01'!createIcon	 ^ NameScopeIcon new.! !!NameScope methodsFor: 'as yet unclassified' stamp: 'NM 8/27/2018 13:59'!extent: aPoint	super extent: aPoint.	self positionText! !!NameScope methodsFor: 'as yet unclassified' stamp: 'NM 8/27/2018 14:00'!nameChanged	text contents: target zell name.! !!NameScope methodsFor: 'as yet unclassified' stamp: 'NM 8/27/2018 14:20'!pointAt: aZellMorph	super pointAt: aZellMorph.	target zell events on: #nameChanged send: #nameChanged to: self.! !!NameScope methodsFor: 'as yet unclassified' stamp: 'NM 8/27/2018 13:59'!pointAway	target ifNotNil: [target zell events for: #nameChanged remove: self].	super pointAway.! !!NameScope methodsFor: 'as yet unclassified' stamp: 'NM 8/27/2018 13:59'!positionText	text ifNotNil: [text position: body position + (body extent / 2) - (text extent / 2)].! !!NameScope methodsFor: 'as yet unclassified' stamp: 'NM 8/27/2018 13:59'!textChanged	target zell name: text contents asString.	self positionText.! !Morph subclass: #ScopeBody	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'zells-eight'!ScopeBody subclass: #InboxScopeBody	instanceVariableNames: 'target'	classVariableNames: ''	poolDictionaries: ''	category: 'zells-eight'!!InboxScopeBody methodsFor: 'as yet unclassified' stamp: 'NM 8/23/2018 14:51'!acceptDroppingMorph: aMorph event: evt	super acceptDroppingMorph: aMorph event: evt.	target zell receive: aMorph zell asSignal.! !!InboxScopeBody methodsFor: 'as yet unclassified' stamp: 'NM 8/23/2018 15:00'!initialize	super initialize.	self color: (Color h:0 s:0 v:0.12).	self clipSubmorphs: true.! !!InboxScopeBody methodsFor: 'as yet unclassified' stamp: 'NM 8/23/2018 14:51'!target: aZellMorph	target := aZellMorph! !!InboxScopeBody methodsFor: 'as yet unclassified' stamp: 'NM 8/23/2018 14:56'!wantsDroppedMorph: aMorph event: evt	^ aMorph isKindOf: ZellMorph.! !Morph subclass: #ScopeConnector	instanceVariableNames: 'scope link'	classVariableNames: ''	poolDictionaries: ''	category: 'zells-eight'!!ScopeConnector methodsFor: 'as yet unclassified' stamp: 'NM 7/4/2018 09:51'!handlesMouseDown: evt	^ true.! !!ScopeConnector methodsFor: 'as yet unclassified' stamp: 'NM 7/5/2018 07:51'!justDroppedInto: aMorph event: anEvent	scope pointAt: aMorph.	self returnToScope.! !!ScopeConnector methodsFor: 'as yet unclassified' stamp: 'NM 8/27/2018 15:43'!mouseDown: evt	self color: Color white.	link ifNil: [link := ScopeLink new		between: scope icon and: self;		openInWorld].		scope pointAway.	ActiveHand grabMorph: self! !!ScopeConnector methodsFor: 'as yet unclassified' stamp: 'NM 7/5/2018 07:51'!rejectDropMorphEvent: evt	scope pointAway.	self returnToScope.! !!ScopeConnector methodsFor: 'as yet unclassified' stamp: 'NM 7/5/2018 07:51'!returnToScope	self color: Color transparent.	scope addMorph: self.	self position: scope position + (5@5).	link delete.	link := nil.! !!ScopeConnector methodsFor: 'as yet unclassified' stamp: 'NM 7/4/2018 09:42'!scope: aScope	scope := aScope.! !!ScopeConnector methodsFor: 'as yet unclassified' stamp: 'NM 8/27/2018 15:40'!startDrag: evt	self color: Color white.	link ifNil: [link := ScopeLink new		between: scope icon and: self;		openInWorld].		scope pointAway.	ActiveHand grabMorph: self! !!ScopeConnector methodsFor: 'as yet unclassified' stamp: 'NM 7/4/2018 10:18'!wantsToBeDroppedInto: aMorph.	^ (aMorph isKindOf: ZellMorph) and: [scope canBePointedAt: aMorph]! !Morph subclass: #ScopeIcon	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'zells-eight'!ScopeIcon subclass: #InboxScopeIcon	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'zells-eight'!!InboxScopeIcon methodsFor: 'as yet unclassified' stamp: 'NM 8/23/2018 14:43'!drawOn: aCanvas	aCanvas line: self topLeft to: self center width: 2 color: self color.	aCanvas line: self bottomLeft to: self center width: 2 color: self color.	aCanvas frameOval: (Rectangle center: self center + (3@0) extent: 6) width: 2 color: self color.! !ScopeIcon subclass: #ListenerScopeIcon	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'zells-eight'!!ListenerScopeIcon methodsFor: 'as yet unclassified' stamp: 'NM 8/23/2018 14:42'!drawOn: aCanvas	aCanvas frameOval: (Rectangle center: self center extent: 12) width: 1 color: self color.	aCanvas frameOval: (Rectangle center: self center extent: 6) width: 2 color: self color.! !ScopeIcon subclass: #NameScopeIcon	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'zells-eight'!!NameScopeIcon methodsFor: 'as yet unclassified' stamp: 'NM 8/27/2018 14:01'!drawOn: aCanvas	aCanvas line: self bottomLeft to: self topLeft width: 2 color: self color.	aCanvas line: self topLeft to: self bottomRight width: 2 color: self color.	aCanvas line: self bottomRight to: self topRight width: 2 color: self color.! !Morph subclass: #ScopeLink	instanceVariableNames: 'fromMorph toMorph'	classVariableNames: ''	poolDictionaries: ''	category: 'zells-eight'!!ScopeLink methodsFor: 'as yet unclassified' stamp: 'NM 7/4/2018 06:55'!between: a and: b	fromMorph := a.	toMorph := b.! !!ScopeLink methodsFor: 'as yet unclassified' stamp: 'NM 7/4/2018 10:28'!drawOn: aCanvas	aCanvas line: fromMorph center to: toMorph center color: self color.! !!ScopeLink methodsFor: 'as yet unclassified' stamp: 'NM 7/7/2018 12:06'!handlesMouseDown: evt	^ true! !!ScopeLink methodsFor: 'as yet unclassified' stamp: 'NM 7/4/2018 15:03'!initialize	super initialize.	self color: Color white.! !!ScopeLink methodsFor: 'as yet unclassified' stamp: 'NM 7/4/2018 09:10'!releaseGrip	self delete.! !!ScopeLink methodsFor: 'as yet unclassified' stamp: 'NM 7/4/2018 09:49'!step	self bounds: (Rectangle center: (fromMorph center + toMorph center) / 2 extent: (fromMorph center - toMorph center) abs + (2@2)).! !!ScopeLink methodsFor: 'as yet unclassified' stamp: 'NM 7/4/2018 07:18'!stepTime	^ 100! !!ScopeLink methodsFor: 'as yet unclassified' stamp: 'NM 7/4/2018 15:11'!wantsToBeDroppedInto: aMorph.	^ false! !Scope subclass: #SpaceScope	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'zells-eight'!!SpaceScope methodsFor: 'as yet unclassified' stamp: 'NM 8/27/2018 14:31'!canBePointedAt: aZellMorph	^ aZellMorph zell isKindOf: SpaceZell.! !!SpaceScope methodsFor: 'as yet unclassified' stamp: 'NM 8/27/2018 14:32'!createBody	^ SpaceScopeBody new		target: target;		yourself.! !!SpaceScope methodsFor: 'as yet unclassified' stamp: 'NM 8/27/2018 14:29'!createIcon	 ^ SpaceScopeIcon new.! !!SpaceScope methodsFor: 'as yet unclassified' stamp: 'NM 8/27/2018 15:10'!inhabitantAdded: aZell	(body inhabitants includesKey: aZell)		ifFalse: [body addInhabitant: aZell]! !!SpaceScope methodsFor: 'as yet unclassified' stamp: 'NM 8/27/2018 14:54'!pointAt: aZellMorph	super pointAt: aZellMorph.	target zell events on: #inhabitantAdded send: #inhabitantAdded: to: self.! !ScopeBody subclass: #SpaceScopeBody	instanceVariableNames: 'target inhabitants'	classVariableNames: ''	poolDictionaries: ''	category: 'zells-eight'!!SpaceScopeBody methodsFor: 'as yet unclassified' stamp: 'NM 8/27/2018 15:00'!acceptDroppingMorph: aMorph event: evt	super acceptDroppingMorph: aMorph event: evt.	inhabitants at: aMorph zell put: aMorph.	target zell add: aMorph zell.! !!SpaceScopeBody methodsFor: 'as yet unclassified' stamp: 'NM 8/27/2018 15:10'!addInhabitant: aZell 	| morph |	morph := ZellMorph for: aZell.	morph position: self nextInhabitantPosition.	self addMorph: morph.	inhabitants at: aZell put: morph.! !!SpaceScopeBody methodsFor: 'as yet unclassified' stamp: 'NM 8/27/2018 14:58'!inhabitants	^ inhabitants! !!SpaceScopeBody methodsFor: 'as yet unclassified' stamp: 'NM 8/27/2018 14:49'!initialize	super initialize.	self color: (Color h:0 s:0 v:0.12).	self clipSubmorphs: true.	inhabitants := Dictionary new.! !!SpaceScopeBody methodsFor: 'as yet unclassified' stamp: 'NM 8/27/2018 15:10'!nextInhabitantPosition	^ self position + ((inhabitants size * 60 + 10)@10)! !!SpaceScopeBody methodsFor: 'as yet unclassified' stamp: 'NM 8/27/2018 14:47'!target: aZellMorph	target := aZellMorph.	target zell inhabitants do: [:z | self addInhabitant: z]! !!SpaceScopeBody methodsFor: 'as yet unclassified' stamp: 'NM 8/27/2018 14:34'!wantsDroppedMorph: aMorph event: evt	^ aMorph isKindOf: ZellMorph.! !ScopeIcon subclass: #SpaceScopeIcon	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'zells-eight'!!SpaceScopeIcon methodsFor: 'as yet unclassified' stamp: 'NM 8/27/2018 14:28'!drawOn: aCanvas	aCanvas frameOval: (Rectangle center: self center extent: 12) width: 1 color: self color.	aCanvas frameOval: (Rectangle center: self center - (2@0) extent: 2) width: 2 color: self color.	aCanvas frameOval: (Rectangle center: self center + (2@0) extent: 2) width: 2 color: self color.! !Scope subclass: #TextScope	instanceVariableNames: 'text'	classVariableNames: ''	poolDictionaries: ''	category: 'zells-eight'!!TextScope methodsFor: 'as yet unclassified' stamp: 'NM 7/4/2018 10:53'!canBePointedAt: aZellMorph	^ aZellMorph zell isKindOf: TextZell.! !!TextScope methodsFor: 'as yet unclassified' stamp: 'NM 7/7/2018 11:45'!createBody	| myBody |	myBody := Morph new 		color: Color black; 		yourself.		text := TextMorph new		contents: (target zell value ifEmpty: ['T']);		color: Color white;		height: 100;		on: #keyUp send: #textChanged to: self;		yourself.			myBody addMorph: text.		^ myBody.! !!TextScope methodsFor: 'as yet unclassified' stamp: 'NM 7/4/2018 14:57'!createIcon	 ^ TextScopeIcon new.! !!TextScope methodsFor: 'as yet unclassified' stamp: 'NM 7/4/2018 06:31'!extent: aPoint	super extent: aPoint.	self positionText! !!TextScope methodsFor: 'as yet unclassified' stamp: 'NM 7/4/2018 10:39'!pointAt: aZellMorph	super pointAt: aZellMorph.	target zell events on: #valueChanged send: #valueChanged to: self.! !!TextScope methodsFor: 'as yet unclassified' stamp: 'NM 7/4/2018 11:21'!pointAway	target ifNotNil: [target zell events for: #valueChanged remove: self].	super pointAway.! !!TextScope methodsFor: 'as yet unclassified' stamp: 'NM 7/4/2018 06:31'!positionText	text ifNotNil: [text position: body position + (body extent / 2) - (text extent / 2)].! !!TextScope methodsFor: 'as yet unclassified' stamp: 'NM 7/4/2018 06:31'!textChanged	target zell value: text contents asString.	self positionText.! !!TextScope methodsFor: 'as yet unclassified' stamp: 'NM 7/4/2018 10:40'!valueChanged	text contents: target zell value.! !ScopeIcon subclass: #TextScopeIcon	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'zells-eight'!!TextScopeIcon methodsFor: 'as yet unclassified' stamp: 'NM 7/4/2018 14:59'!drawOn: aCanvas	aCanvas line: self topLeft to: self topRight width: 2 color: self color.	aCanvas line: self bottomCenter to: self topCenter width: 2 color: self color.! !ListenerScope subclass: #TranscriptScope	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'zells-eight'!!TranscriptScope methodsFor: 'as yet unclassified' stamp: 'NM 8/23/2018 16:30'!signalReceived: aSignal	Transcript show: aSignal; cr.		body addMorph: (TextMorph new 		color: Color white;		contents: Time current asString, ': ', aSignal asString)! !!TranscriptScope methodsFor: 'as yet unclassified' stamp: 'NM 8/23/2018 16:36'!target	^ target! !Object subclass: #ZEventEmitter	instanceVariableNames: 'listeners'	classVariableNames: ''	poolDictionaries: ''	category: 'zells-eight'!!ZEventEmitter methodsFor: 'as yet unclassified' stamp: 'NM 6/27/2018 13:44'!fire: anEvent	self fire: anEvent for: [:receiver :message | receiver perform: message].! !!ZEventEmitter methodsFor: 'as yet unclassified' stamp: 'NM 6/27/2018 13:45'!fire: anEvent for: aBlock	listeners at: anEvent ifPresent: [:listeners | 		listeners keysAndValuesDo: [:receiver :messages | 			messages do: [:message | aBlock value: receiver value: message]]]! !!ZEventEmitter methodsFor: 'as yet unclassified' stamp: 'NM 6/27/2018 13:45'!fire: anEvent with: anArgument	self fire: anEvent for: [:receiver :message | receiver perform: message with: anArgument].! !!ZEventEmitter methodsFor: 'as yet unclassified' stamp: 'NM 6/27/2018 14:43'!fire: anEvent with: anArgument with: anotherArgument	self fire: anEvent for: [:receiver :message | receiver perform: message with: anArgument with: anotherArgument].! !!ZEventEmitter methodsFor: 'as yet unclassified' stamp: 'NM 6/27/2018 11:00'!for: anEvent remove: aReceiver	listeners at: anEvent ifPresent: [:ls | ls removeKey: aReceiver]! !!ZEventEmitter methodsFor: 'as yet unclassified' stamp: 'NM 6/22/2018 15:18'!initialize	super initialize.	listeners := Dictionary new.! !!ZEventEmitter methodsFor: 'as yet unclassified' stamp: 'NM 6/27/2018 10:58'!on: anEvent send: aMessage to: aReceiver	((listeners at: anEvent ifAbsentPut: Dictionary new)		at: aReceiver ifAbsentPut: Set new) add: aMessage! !Object subclass: #Zell	instanceVariableNames: 'events name'	classVariableNames: ''	poolDictionaries: ''	category: 'zells-eight'!!Zell methodsFor: 'as yet unclassified' stamp: 'NM 8/27/2018 15:17'!asSignal	name isEmpty		ifTrue: [^ nil]		ifFalse: [^ Association key: self name value: nil]! !!Zell methodsFor: 'as yet unclassified' stamp: 'NM 8/27/2018 14:30'!drawIconOn: aCanvas in: aRectangle	aCanvas drawString: self name at: aRectangle topLeft + (10@(5)) font: nil color: Color yellow.! !!Zell methodsFor: 'as yet unclassified' stamp: 'NM 8/24/2018 12:09'!events	^ events! !!Zell methodsFor: 'as yet unclassified' stamp: 'NM 8/27/2018 14:04'!initialize	super initialize.	events := ZEventEmitter new.	self name: ''.! !!Zell methodsFor: 'as yet unclassified' stamp: 'NM 8/27/2018 15:33'!isForMe: aSignal	(self name isEmpty) ifTrue: [		^ true].	(aSignal isKindOf: Association) ifTrue: [		^ self isForMe: aSignal value].			(aSignal isKindOf: Set) ifTrue: [		^ aSignal detect: [:z | z name = #to]			ifFound: [:z | ^ z value = self name]			ifNone: [^ false]].		^ true! !!Zell methodsFor: 'as yet unclassified' stamp: 'NM 8/27/2018 14:02'!name	^ name! !!Zell methodsFor: 'as yet unclassified' stamp: 'NM 8/27/2018 14:19'!name: aString	name := aString.	events fire: #nameChanged.	events fire: #iconChanged.! !!Zell methodsFor: 'as yet unclassified' stamp: 'NM 8/27/2018 15:26'!receive: aSignal	(self isForMe: aSignal)		ifTrue: [events fire: #signalReceived with: aSignal].! !Zell subclass: #SpaceZell	instanceVariableNames: 'inhabitants'	classVariableNames: ''	poolDictionaries: ''	category: 'zells-eight'!!SpaceZell methodsFor: 'as yet unclassified' stamp: 'NM 8/27/2018 14:56'!add: aZell	inhabitants add: aZell.	events fire: #inhabitantAdded with: aZell! !!SpaceZell methodsFor: 'as yet unclassified' stamp: 'NM 8/27/2018 15:15'!addAll: zells	zells do: [:z | self add: z]! !!SpaceZell methodsFor: 'as yet unclassified' stamp: 'NM 8/27/2018 15:19'!asSignal	name isEmpty		ifTrue: [^ inhabitants collect: [:m | m asSignal]]		ifFalse: [^ Association key: self name value: (inhabitants collect: [:m | m asSignal])]! !!SpaceZell methodsFor: 'as yet unclassified' stamp: 'NM 8/27/2018 14:46'!inhabitants	^ inhabitants! !!SpaceZell methodsFor: 'as yet unclassified' stamp: 'NM 8/27/2018 14:24'!initialize	super initialize.	inhabitants := Set new.! !!SpaceZell methodsFor: 'as yet unclassified' stamp: 'NM 8/27/2018 15:24'!receive: aSignal	super receive: aSignal.	inhabitants do: [:z | z receive: aSignal]! !Zell subclass: #TextZell	instanceVariableNames: 'textValue'	classVariableNames: ''	poolDictionaries: ''	category: 'zells-eight'!!TextZell methodsFor: 'as yet unclassified' stamp: 'NM 8/27/2018 14:42'!asSignal	name isEmpty		ifTrue: [^ self value]		ifFalse: [^ Association key: self name value: self value]! !!TextZell methodsFor: 'as yet unclassified' stamp: 'NM 8/27/2018 14:16'!drawIconOn: aCanvas in: aRectangle	super drawIconOn: aCanvas in: aRectangle.	aCanvas drawString: self iconString at: aRectangle leftCenter + (10@(-5)) font: nil color: Color white.! !!TextZell methodsFor: 'as yet unclassified' stamp: 'NM 6/27/2018 10:50'!iconString	^ self value isEmpty		ifTrue: [^ #T]		ifFalse: [^ self value]! !!TextZell methodsFor: 'as yet unclassified' stamp: 'NM 7/4/2018 10:33'!initialize	super initialize.	self value: ''.! !!TextZell methodsFor: 'as yet unclassified' stamp: 'NM 6/22/2018 15:14'!value	^ textValue.! !!TextZell methodsFor: 'as yet unclassified' stamp: 'NM 6/27/2018 11:14'!value: aString	textValue := aString.	events fire: #valueChanged.	events fire: #iconChanged.! !Morph subclass: #ZellMorph	instanceVariableNames: 'zell flash'	classVariableNames: ''	poolDictionaries: ''	category: 'zells-eight'!!ZellMorph methodsFor: 'as yet unclassified' stamp: 'NM 6/27/2018 18:51'!drawOn: aCanvas	flash ifTrue: [aCanvas fillOval: self bounds color: (self color mixed: 0.3 with: Color black)].	aCanvas frameOval: self bounds width: 2 color: self color.	zell drawIconOn: aCanvas in: self bounds.! !!ZellMorph methodsFor: 'as yet unclassified' stamp: 'NM 6/27/2018 18:49'!initialize	super initialize.	self extent: 50@50.	self color: (((Color wheel: 12) atRandom) mixed: 0.7 with: Color white).		flash := false.	zell := Zell new.! !!ZellMorph methodsFor: 'as yet unclassified' stamp: 'NM 7/7/2018 11:58'!mouseDown: evt	ActiveHand grabMorph: self! !!ZellMorph methodsFor: 'as yet unclassified' stamp: 'NM 6/27/2018 18:50'!onReceived: aSignal	flash := true.	self redrawIcon.	[(Delay forSeconds: 0.1) wait.	flash := false.	self redrawIcon.] fork! !!ZellMorph methodsFor: 'as yet unclassified' stamp: 'NM 6/27/2018 15:11'!position: aPoint	(self owner isKindOf: ZDishMorph) ifTrue: [self owner dish move: self zell to: aPoint].	^ super position: aPoint.! !!ZellMorph methodsFor: 'as yet unclassified' stamp: 'NM 6/27/2018 11:07'!redrawIcon	self invalidRect: self bounds! !!ZellMorph methodsFor: 'as yet unclassified' stamp: 'NM 7/4/2018 10:16'!wantsDroppedMorph: aMorph event: evt	^ aMorph isKindOf: ScopeConnector.! !!ZellMorph methodsFor: 'as yet unclassified' stamp: 'NM 6/27/2018 11:45'!zell	^ zell! !!ZellMorph methodsFor: 'as yet unclassified' stamp: 'NM 6/27/2018 18:47'!zell: aZell	zell events for: #iconChanged remove: self.	zell := aZell.	zell events on: #iconChanged send: #redrawIcon to: self.	zell events on: #signalReceived send: #onReceived: to: self.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ZellMorph class	instanceVariableNames: ''!!ZellMorph class methodsFor: 'as yet unclassified' stamp: 'NM 6/27/2018 10:35'!for: aZell	^ self new		zell: aZell;		yourself.! !